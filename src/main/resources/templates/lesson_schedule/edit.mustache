{{> header}}
<h1>Группа {{group}}:</h1>
<h2>Рекомендуется заполнить сначала тип (лекция/нет), регулярность и день недели, затем номер пары, затем всё остальное
</h2>
<table>
    <tr valign="top">
        <td>
            <form method="post">
                <div>
                    Лекция <input type="checkbox" name="isLection" id="isLectionCheckbox"> (если выбрать этот пункт, то
                    не будут применяться проверки занятости аудиторий, преподавателей и т. д.)
                </div>

                <div>
                    Регулярность проведения:
                    <select name="regularity" id="regularitySelect">
                        <option value="chis_and_znam" selected="selected">Еженедельно</option>
                        <option value="chis">По числителям</option>
                        <option value="znam">По знаменателям</option>
                    </select>
                </div>
                <div>
                    День недели:
                    <select name="dayOfTheWeek" id="dayOfTheWeek">
                        {{#daysOfWeek}}
                        <option value={{value}}>{{name}}</option>
                        {{/daysOfWeek}}
                    </select>
                </div>
                <div>
                    Номер пары:
                    <select name="lessonNumber" id="lessonNumber">
                        <option value=1>1</option>
                        <option value=2>2</option>
                        <option value=3>3</option>
                        <option value=4>4</option>
                        <option value=5>5</option>
                    </select>
                </div>

                <div>
                    Преподаватель:
                    <select name="teacherId" id="teachers">
                    </select>
                </div>

                <div>
                    Учебный предмет:
                    <select name="subjectId" id="subject">
                        {{#subjects}}
                        <option value={{subjectId}}>{{subjectName}}</option>
                        {{/subjects}}
                    </select>
                </div>
                <div>
                    Проводится онлайн <input type="checkbox" name="isOnline" id="isOnlineCheckbox">
                </div>
                <div>
                    Место проведения:
                    <select name="locationId">
                        {{#locations}}
                        <option value={{lessonLocationId}}>{{lessonLocation}}</option>
                        {{/locations}}
                    </select>
                </div>
                <div id="auditoriumsDiv">
                    Аудитория:
                    <select name="auditorium" id="auditorium"></select>
                </div>
                <div>
                    <button type="submit">Добавить</button>
                </div>
                <input type="hidden" name="_csrf" value="{{_csrf.token}}" />
            </form>
        </td>
        <td>
            {{>lesson_schedule/group_table}}
        </td>
    </tr>
</table>
<script>

    auditoriums = JSON.parse("{{auditoriums}}".replaceAll("&quot;", '"'))
    teachers = JSON.parse("{{teachers}}".replaceAll("&quot;", '"'))
    busyness = JSON.parse("{{busynessInfo}}".replaceAll("&quot;", '"'))
    regularitySelect = document.getElementById('regularitySelect')
    auditoriumsSelect = document.getElementById('auditorium')
    dayOfTheWeekSelect = document.getElementById('dayOfTheWeek')
    lessonNumberSelect = document.getElementById("lessonNumber")
    teachersSelect = document.getElementById('teachers')
    isOnlineCheckbox = document.getElementById('isOnlineCheckbox')
    isLectionCheckbox = document.getElementById('isLectionCheckbox')
    auditoriumsDiv = document.getElementById('auditoriumsDiv')

    fillPairs(busyness[dayOfTheWeekSelect.value][regularitySelect.value])

    isOnlineCheckbox.addEventListener("change", () => {
        if (isOnlineCheckbox.checked) {
            auditoriumsDiv.style.display = 'none'
        } else {
            auditoriumsDiv.style.display = 'block'
        }
    })

    isLectionCheckbox.addEventListener("change", () => {
        if (isLectionCheckbox.checked) {
            fillAllFree();
        } else {
            fillPairs(busyness[dayOfTheWeekSelect.value][regularitySelect.value])
        }
    })

    dayOfTheWeekSelect.addEventListener("change", () => {
        fillPairs(busyness[dayOfTheWeekSelect.value][regularitySelect.value])
    });
    regularitySelect.addEventListener("change", () => {
        fillPairs(busyness[dayOfTheWeekSelect.value][regularitySelect.value])
    });


    function fillPairs(day) {
        saveValue = lessonNumberSelect.value
        lessonNumberSelect.innerText = ''
        lessonsAvailable = Object.keys(day)
        lessonsAvailable.map(s => {
            let option = document.createElement('option')
            option.value = s
            option.innerText = s
            lessonNumberSelect.append(option)
        })
        if (lessonsAvailable.includes(saveValue)) {
            lessonNumberSelect.value = saveValue
        }
        if (isLectionCheckbox.checked) return
        fillTeachers(busyness[dayOfTheWeekSelect.value][regularitySelect.value][lessonNumberSelect.value]["busyTeachers"])
        fillAuditoriums(busyness[dayOfTheWeekSelect.value][regularitySelect.value][lessonNumberSelect.value]["busyAuditoriums"])
    }

    lessonNumberSelect.addEventListener("change", () => {
        if (isLectionCheckbox.checked) return
        fillTeachers(busyness[dayOfTheWeekSelect.value][regularitySelect.value][lessonNumberSelect.value]["busyTeachers"])
        fillAuditoriums(busyness[dayOfTheWeekSelect.value][regularitySelect.value][lessonNumberSelect.value]["busyAuditoriums"])
    })

    function fillTeachers(excludeTeachers) {
        saveValue = +teachersSelect.value
        teachersSelect.innerText = ''
        teachers.map(teacher => {
            if (!(excludeTeachers.includes(teacher['id']))) {
                let option = document.createElement('option')
                option.value = teacher['id']
                option.innerText = teacher['fullName']
                teachersSelect.append(option)
            }
        }
        )
        if (!(excludeTeachers.includes(saveValue) || saveValue == '')) {
            teachersSelect.value = saveValue
        }
    }

    function fillAuditoriums(excludeAuditoriums) {
        saveValue = +auditoriumsSelect.value
        auditoriumsSelect.innerText = ''
        auditoriums.map(auditorium => {
            if (!(excludeAuditoriums.includes(auditorium['auditoriumNumber']))) {
                let option = document.createElement('option')
                option.value = auditorium['auditoriumNumber']
                option.innerText = auditorium['auditoriumNumber']
                auditoriumsSelect.append(option)
            }
        }
        )
        if (!(excludeAuditoriums.includes(saveValue) || saveValue == '')) {
            auditoriumsSelect.value = saveValue
        }
    }

    function fillAllFree() {
        fillTeachers([])
        fillAuditoriums([])
    }
</script>
{{> footer}}